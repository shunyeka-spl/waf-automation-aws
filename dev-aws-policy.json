{
  "Version": "2012-10-17",
  "Statement": [{
      "Effect": "Allow",
      "Action": [
        "cloud9:ValidateEnvironmentName",
        "cloud9:UpdateUserSettings",
        "cloud9:GetUserSettings",
        "iam:GetUser",
        "iam:ListUsers",
        "ec2:DescribeVpcs",
        "ec2:DescribeSubnets"
      ],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "cloud9:CreateEnvironmentEC2",
        "cloud9:CreateEnvironmentSSH"
      ],
      "Resource": "*",
      "Condition": {
        "Null": {
          "cloud9:OwnerArn": "true"
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": [
        "cloud9:GetUserPublicKey"
      ],
      "Resource": "*",
      "Condition": {
        "Null": {
          "cloud9:UserArn": "true"
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": [
        "cloud9:DescribeEnvironmentMemberships"
      ],
      "Resource": [
        "*"
      ],
      "Condition": {
        "Null": {
          "cloud9:UserArn": "true",
          "cloud9:EnvironmentId": "true"
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": [
        "iam:CreateServiceLinkedRole"
      ],
      "Resource": "*",
      "Condition": {
        "StringLike": {
          "iam:AWSServiceName": "cloud9.amazonaws.com"
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": "ssm:StartSession",
      "Resource": "arn:aws:ec2:*:*:instance/*",
      "Condition": {
        "StringLike": {
          "ssm:resourceTag/aws:cloud9:environment": "*"
        },
        "StringEquals": {
          "aws:CalledViaFirst": "cloud9.amazonaws.com"
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": [
        "ssm:StartSession"
      ],
      "Resource": [
        "arn:aws:ssm:*:*:document/*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "cloud9:GetUserSettings",
        "cloud9:UpdateUserSettings",
        "iam:GetUser",
        "iam:ListUsers"
      ],
      "Resource": "*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "cloud9:DescribeEnvironmentMemberships"
      ],
      "Resource": [
        "*"
      ],
      "Condition": {
        "Null": {
          "cloud9:UserArn": "true",
          "cloud9:EnvironmentId": "true"
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": "ssm:StartSession",
      "Resource": "arn:aws:ec2:*:*:instance/*",
      "Condition": {
        "StringLike": {
          "ssm:resourceTag/aws:cloud9:environment": "*"
        },
        "StringEquals": {
          "aws:CalledViaFirst": "cloud9.amazonaws.com"
        }
      }
    },
    {
      "Effect": "Allow",
      "Action": [
        "ssm:StartSession"
      ],
      "Resource": [
        "arn:aws:ssm:*:*:document/*"
      ]
    },
    {

      "Effect": "Allow",
      "Action": [
        "cloudformation:DescribeStacks",
        "cloudformation:DescribeStackEvents",
        "cloudformation:DescribeStackResource",
        "cloudformation:DescribeStackResources"
      ],
      "Resource": "*"
    },
    {
      "Sid": "VisualEditor0",
      "Effect": "Allow",
      "Action": [
        "apigateway:DELETE",
        "apigateway:GET",
        "apigateway:PATCH",
        "apigateway:POST",
        "apigateway:PUT",
        "cloudformation:CreateChangeSet",
        "cloudformation:CreateStack",
        "cloudformation:DeleteStack",
        "cloudformation:DescribeChangeSet",
        "cloudformation:DescribeStackEvents",
        "cloudformation:DescribeStacks",
        "cloudformation:ExecuteChangeSet",
        "cloudformation:GetTemplateSummary",
        "cloudformation:ListStackResources",
        "cloudformation:UpdateStack",
        "cloudformation:ListStacks",
        "iam:AttachRolePolicy",
        "iam:DeleteRolePolicy",
        "iam:DetachRolePolicy",
        "iam:GetRole",
        "iam:CreateRole",
        "iam:GetRolePolicy",
        "iam:PassRole",
        "iam:PutRolePolicy",
        "iam:TagRole",
        "iam:DeleteRole"
      ],
      "Resource": "*"
    },
    {
      "Sid": "VisualEditor1",
      "Effect": "Allow",
      "Action": [
        "apigateway:DELETE",
        "apigateway:PUT",
        "apigateway:PATCH",
        "apigateway:POST",
        "apigateway:GET"
      ],
      "Resource": "arn:aws:apigateway:*::*"
    },
    {
      "Sid": "VisualEditor2",
      "Effect": "Allow",
      "Action": [
        "cloudformation:CreateChangeSet",
        "cloudfront:CreateRealtimeLogConfig",
        "cloudfront:DeleteRealtimeLogConfig",
        "cloudfront:GetRealtimeLogConfig",
        "cloudfront:ListDistributionsByRealtimeLogConfig",
        "cloudfront:ListRealtimeLogConfigs",
        "cloudfront:UpdateRealtimeLogConfig",
        "kinesis:*",
        "lambda:*",
        "logs:*",
        "s3:*",
        "wafv2:*",
        "waf:*",
        "dynamodb:*",
        "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
        "cloudfront:ListCloudFrontOriginAccessIdentities",        
        "cloudfront:GetOriginRequestPolicyConfig",                
        "cloudfront:GetDistribution",        
        "cloudfront:GetOriginRequestPolicy",
        "cloudfront:ListDistributions",
        "cloudfront:GetCloudFrontOriginAccessIdentity",
        "cloudfront:UpdateDistribution",
        "cloudfront:UpdateCloudFrontOriginAccessIdentity",
        "cloudfront:GetDistributionConfig",
        "timestream:*",
        "cloudfront:CreateOriginRequestPolicy",
        "cloudfront:TagResource",
        "cloudfront:AssociateAlias",
        "cloudfront:CreateDistribution",
        "cloudfront:CreateCloudFrontOriginAccessIdentity",
        "cloudfront:CreateCachePolicy",
        "cloudfront:CreateRealtimeLogConfig",
        "route53:GetHostedZone",
        "route53:ListResourceRecordSets",
        "route53:ChangeResourceRecordSets",
        "route53:ListResourceRecordSets",
        "route53:GetHostedZoneCount",
        "route53:ListHostedZonesByName",
        "route53:ListHostedZones",
        "acm:DescribeCertificate",
        "acm:ListCertificates",
        "sns:Publish",
        "sns:DeleteTopic",
        "sns:CreateTopic",
        "sns:ConfirmSubscription",
        "sns:ListTopics",
        "sns:ListSubscriptions",        
        "waf-regional:*",
        "elasticloadbalancing:SetWebACL",                
        "apigateway:SetWebACL",        
        "cloudfront:ListDistributionsByWebACLId",        
        "cloudwatch:GetMetricData",
        "cloudwatch:GetMetricStatistics",
        "cloudwatch:ListMetrics",
        "ec2:DescribeRegions",
        "elasticloadbalancing:DescribeLoadBalancers",        
        "appsync:ListGraphqlApis",
        "appsync:SetWebACL",
        "cloudfront:DeleteRealtimeLogConfig"
      ],
      "Resource": "*"
    }
  ]
}